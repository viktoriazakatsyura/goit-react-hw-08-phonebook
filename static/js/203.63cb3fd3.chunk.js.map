{"version":3,"file":"static/js/203.63cb3fd3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getQueryFilter = state => state.filter.query;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { useNotify } from '../../hooks/useNotify';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\n\nconst ContactFormWrapper = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  width: '300px',\n  margin: '0 auto',\n});\n\nconst ContactFormInput = styled(TextField)({\n  marginBottom: '15px',\n  width: '100%',\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const { showFailure } = useNotify();\n\n  const addNewContact = (name, number) => {\n    const condition = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (condition) {\n      return showFailure(`${name} is already in contacts!`);\n    }\n    const newContact = {\n      name: name,\n      number: number,\n      id: nanoid(),\n    };\n    dispatch(addContact(newContact));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    addNewContact(form.elements.name.value, form.elements.number.value);\n    form.reset();\n  };\n\n  return (\n    <ContactFormWrapper onSubmit={handleSubmit}>\n      <ContactFormInput\n        type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          id='name'\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n      />\n      <ContactFormInput\n        type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number\"\n          label='number'\n          id='number'\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n      />\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </ContactFormWrapper>\n  );\n};\n\n\n\n\n\n\n     \n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList__item\":\"Contact_contactList__item__6bM-C\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport css from './Contact.module.css';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const Contact = ({ contact }) => {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={css.contactList__item} key={id}>\n      {name}: {number}\n      <Button variant=\"contained\" onClick={handleDelete}>\n        <DeleteIcon />\n      </Button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport { getContacts, getQueryFilter } from '../../redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getQueryFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(contact => (\n        <Contact contact={contact} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import { useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/sliceFilter';\nimport { TextField } from '@mui/material';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"filter\"\n        type=\"text\"\n        name=\"name\"\n        label=\"Find contact by name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        autoComplete=\"name\"\n        onChange={handleChangeFilter}\n        sx={{ width: '400px' }}\n      />\n    </div>\n  );\n};\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Loader } from '../components/Loader/Loader';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { getIsLoading, getError } from '../redux/contacts/selectors';\nimport Typography from '@mui/material/Typography';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Typography variant=\"h3\" gutterBottom align=\"center\" marginTop=\"40px\" color=\"limegreen\">\n        PHONE BOOK\n      </Typography>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </>\n  );\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getQueryFilter","filter","query","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactFormWrapper","styled","display","flexDirection","alignItems","width","margin","ContactFormInput","TextField","marginBottom","ContactForm","dispatch","useDispatch","useSelector","showFailure","useNotify","onSubmit","e","preventDefault","form","target","name","number","find","contact","toLowerCase","newContact","addContact","addNewContact","elements","value","reset","type","placeholder","pattern","title","required","label","Button","variant","Contact","className","css","onClick","deleteContact","Delete","ContactList","filteredContacts","includes","map","Filter","fullWidth","autoComplete","onChange","changeFilter","currentTarget","sx","Contacts","useEffect","fetchContacts","Typography","gutterBottom","align","marginTop","color","Loader","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}