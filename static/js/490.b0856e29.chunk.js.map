{"version":3,"file":"static/js/490.b0856e29.chunk.js","mappings":"kUAaMA,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAiBA,OACE,SAAC,IAAD,CAAeT,MAAOA,EAAtB,UACE,UAAC,IAAD,CAAWU,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,qBAC7B,SAAC,IAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAnC,oBAGA,UAAC,IAAD,CAAKT,UAAU,OAAOU,SA/BT,SAAAC,GACnBA,EAAMC,iBACNnB,GAASoB,EAAAA,EAAAA,IAAM,CAAEjB,MAAAA,EAAOE,SAAAA,KACxBgB,QAAQC,IAAInB,EAAOE,GACnBD,EAAS,IACTE,EAAY,GACb,EAyBqDG,GAAI,CAAEc,GAAI,GAAxD,WACE,SAAC,IAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAO7B,EACP8B,SAlCc,SAAAf,GACxBd,EAASc,EAAMgB,OAAOF,MACvB,KAkCS,SAAC,IAAD,CACER,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNO,KAAK,WACLR,GAAG,WACHG,aAAa,mBACbE,MAAO3B,EACP4B,SA1CiB,SAAAf,GAC3BZ,EAAYY,EAAMgB,OAAOF,MAC1B,KA0CS,SAAC,IAAD,CACEG,KAAK,SACLT,WAAS,EACTV,QAAQ,YACRP,GAAI,CAAEc,GAAI,EAAGa,GAAI,GAJnB,6BAaX,C","sources":["pages/Login.js"],"sourcesContent":["import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { login } from '../redux/auth/operations';\nimport { useState } from 'react';\n\nconst theme = createTheme();\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(login({ email, password }));\n    console.log(email, password);\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}></Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n           Login\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={handleEmailChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={handlePasswordChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Login\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}"],"names":["theme","createTheme","Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","onSubmit","event","preventDefault","login","console","log","mt","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","type","mb"],"sourceRoot":""}